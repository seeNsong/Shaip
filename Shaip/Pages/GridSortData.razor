@page "/GridSortData"

@using Demo.Blazor.Model
@using Demo.Blazor.Services
@inject FlatProductService FlatProductService

<div class="demo-description">
    <h2>Data Grid - Sort Data</h2>
    <p>
        Users can <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGrid-1#sort-data">sort grid data</a> by clicking the required column header. 
        An arrow glyph indicates the sort order within the corresponding column values. 
        The grid can also be sorted against multiple columns. 
        To do so, click the required column headers with the <kbd>Shift</kbd> key pressed.
    </p>
    <p>
        To disable sorting data within the entire grid, set the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxDataGridBase-1.AllowSort">DxDataGrid.AllowSort</a> property to <b>false</b>. 
        To control an individual column’s sorting, use the following properties provided by Data Grid column objects:
    </p>
    <ul>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGridColumn.AllowSort">AllowSort</a> - Specifies whether users can sort data by the column's values.</li>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGridColumn.SortOrder">SortOrder</a> - Specifies a column sort order.</li>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGridColumn.SortIndex">SortIndex</a> - Specifies a column position among sorted columns.</li>
    </ul>
    <p>
        In this demo, the <b>ID</b> column values cannot be sorted. 
        Sort orders for the <b>Category</b> and <b>Subcategory</b> columns are declared in a component markup (see the code below). 
        However, a user can change a column sort order by clicking the column header.
    </p>

</div>

@if (DataSource == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DxDataGrid Data="@DataSource" ShowFilterRow="false">
        <DxDataGridColumn Field="@nameof(ProductFlat.Id)" Caption="ID" AllowSort="@DefaultBoolean.False" Width="50px"></DxDataGridColumn>
        <DxDataGridColumn Field="@nameof(ProductFlat.Category)" SortOrder="@DataGridColumnSortOrder.Descending" SortIndex="0"></DxDataGridColumn>
        <DxDataGridColumn Field="@nameof(ProductFlat.Subcategory)" SortOrder="@DataGridColumnSortOrder.Ascending" SortIndex="1"></DxDataGridColumn>
        <DxDataGridColumn Field="@nameof(ProductFlat.ProductName)" Caption="Product Name"></DxDataGridColumn>
    </DxDataGrid>
    <div class="code-snippet card demo-card-wide">
        <CodeSnippetHeader></CodeSnippetHeader>
        <div class="card-footer text-muted ">
            <CodeSnippet_Grid_SortData></CodeSnippet_Grid_SortData>
        </div>
    </div>
}

@code {
    IQueryable<ProductFlat> DataSource;

    protected override async Task OnInitializedAsync()
    {
        DataSource = await FlatProductService.Load();
    }
}
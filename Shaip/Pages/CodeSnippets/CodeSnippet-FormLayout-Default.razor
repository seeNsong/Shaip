<CodeSnippet>
@(@"<DxFormLayout>
    <DxFormLayoutItem Caption=""Contact Name:"" ColSpanMd=""6"">
        <Template>
            <DxTextBox @bind-Text=""@Name""></DxTextBox>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption=""Email:"" ColSpanMd=""6"">
        <Template>
            <DxTextBox @bind-Text=""@Email""></DxTextBox>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption=""Birthday:"" ColSpanMd=""6"">
        <Template>
            <DxDateEdit @bind-Date=""@Birthday""></DxDateEdit>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption=""Worked year(s):"" ColSpanMd=""6"">
        <Template>
            <DxSpinEdit @bind-Value=""@Worked""></DxSpinEdit>
        </Template>
    </DxFormLayoutItem>

    <DxFormLayoutItem Caption=""At Vacation:"">
        <Template>
            <DxCheckBox @bind-Checked=""@AtVacation""></DxCheckBox>
        </Template>
    </DxFormLayoutItem>
</DxFormLayout>

@code {
    string name = ""Nancy Davolio"";
    string Name { get => name; set { name = value; OnChanged(); } }

    string email = ""NancyDavolio@sample.com"";
    string Email { get => email; set { email = value; OnChanged(); } }

    DateTime birthday = DateTime.Now.AddYears(-20);
    DateTime Birthday { get => birthday; set { birthday = value; OnChanged(); } }

    int worked = 3;
    int Worked { get => worked; set { worked = value; OnChanged(); } }

    bool atVacation = true;
    bool AtVacation { get => atVacation; set { atVacation = value; OnChanged(); } }

    void OnChanged() { InvokeAsync(StateHasChanged); }
}")
</CodeSnippet>
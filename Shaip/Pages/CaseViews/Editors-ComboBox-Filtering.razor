@using Demo.Blazor.Model
@using Demo.Blazor.Services;
@inject CountryNamesService CountryNamesService
@{
    RenderFragment<string> GetLink = (propName) =>
    @<a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DataGridFilteringMode">@propName</a>;
}

<div class="demo-description" id="IncrementalFiltering">
    <h2><DemoNavLink Link="ComboBox#IncrementalFiltering" />ComboBox - Incremental Filtering</h2>
    <p>
        Use the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxComboBoxBase-1.FilteringMode">FilteringMode</a> property to specify whether and how the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxComboBox-1#filter-data">ComboBox</a> filters list items when users type in the edit box.
    </p>
    <ul>
        <li>@GetLink("Contains") - The ComboBox filters list items that contain the search string and highlights matches.</li>
        <li>@GetLink("StartsWith") - The ComboBox filters list items that begin with the search string and highlights matches.</li>
        <li>@GetLink("None") - The ComboBox does not filter list items.</li>
    </ul>
    <p>
        In this demo, the filter mode is set to @GetLink("Contains"). To filter list items, focus the ComboBox and type a search string.
    </p>
</div>

@if (Data != null)
{
    <div class="card demo-card">
        <div class="card-header">Text = "<b>@(Text)</b>", SelectedItem = <b>@(SelectedItem == null ? "Null" : SelectedItem)</b></div>
        <div class="card-body mw-480" style="height: 280px">
            <DxComboBox Id="ComboBox1"
                        Data="@Data"
                        FilteringMode="@DataGridFilteringMode.Contains"
                        @bind-SelectedItem="@SelectedItem"
                        @bind-Text="@Text"
                        @bind-DropDownVisible="@DropDownVisible"></DxComboBox>
        </div>
    </div>

    <div class="code-snippet card demo-card-wide">
        <CodeSnippetHeader></CodeSnippetHeader>
        <div class="card-footer text-muted">
            <CodeSnippet_Editors_ComboBox_Filtering></CodeSnippet_Editors_ComboBox_Filtering>
        </div>
    </div>
}

@code {
    IEnumerable<string> Data;

    protected override async Task OnInitializedAsync() {
        Data = await CountryNamesService.Load();
    }

    string text = "";
    string Text { get => text; set { text = value; InvokeAsync(StateHasChanged); } }

    string selectedItem = null;
    string SelectedItem { get => selectedItem; set { selectedItem = value; InvokeAsync(StateHasChanged); } }


    bool dropDownVisible = true;
    bool DropDownVisible { get => dropDownVisible; set { dropDownVisible = value; InvokeAsync(StateHasChanged); } }
}
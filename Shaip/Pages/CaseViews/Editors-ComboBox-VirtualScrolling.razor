@page "/ComboBoxVirtualScrolling"

<div class="demo-description" id="VirtualScrolling">
    <h2><DemoNavLink Link="ComboBox#VirtualScrolling" />ComboBox - Virtual Scrolling</h2>
    <p>
        Use the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxComboBoxBase-1.ListRenderMode">ListRenderMode</a> property to specify how the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxComboBox-1#virtual-scrolling">ComboBox</a> loads the item list.
    </p>
    <ul>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.ListRenderMode">Entire</a> - The ComboBox loads the entire item list. Use this option for small item lists where scrolling should work instantly.</li>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.ListRenderMode">Virtual</a> - The ComboBox loads visible items only. Use this option to improve performance when the list contains to many items to load simultaneously.</li>
    </ul>
    <p>
        In this demo, the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxComboBoxBase-1.ListRenderMode">ListRenderMode</a> property is set to <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.ListRenderMode">ListRenderMode.Virtual</a>.
    </p>
</div>

<div class="card demo-card">
    <div class="card-header">SelectedItem = <b>@(SelectedItem != null ? SelectedItem : "null")</b></div>
    <div class="card-body mw-480" style="height: 280px;">
        <DxComboBox Data="@Strings"
                    ListRenderMode="@ListRenderMode.Virtual"
                    FilteringMode="@DataGridFilteringMode.Contains"
                    @bind-SelectedItem="@SelectedItem"
                    @bind-DropDownVisible="@DropDownVisible">

        </DxComboBox>
    </div>
</div>

<div class="code-snippet card demo-card-wide">
    <CodeSnippetHeader></CodeSnippetHeader>
    <div class="card-footer text-muted ">
        <CodeSnippet_ComboBox_VirtualScrolling></CodeSnippet_ComboBox_VirtualScrolling>
    </div>
</div>

@code {
    string selectedItem = null;
    string SelectedItem { get => selectedItem; set { selectedItem = value; InvokeAsync(StateHasChanged); } }

    List<string> Strings = new List<string>();
    protected override void OnInitialized() {
        for(int i = 0; i < 1000; i++)
            Strings.Add($"Option #{i}");
    }

    bool dropDownVisible = true;
    bool DropDownVisible { get => dropDownVisible; set { dropDownVisible = value; InvokeAsync(StateHasChanged); } }
}
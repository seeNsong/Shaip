@using Demo.Blazor.Model
@using Demo.Blazor.Services;
@inject CountryNamesService CountryNamesService

<div class="demo-description" id="FilterModes">
    <h2><DemoNavLink Link="TagBox#FilterModes" />TagBox - Filter Modes</h2>
    <p>
        Use the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxTagBoxBase-1.FilteringMode">FilteringMode</a> property to specify whether and how the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxTagBox-1">TagBox</a> filters list items when users type in the edit box.
    </p>
    <ul>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DataGridFilteringMode">Contains</a> (Default) - The TagBox filters list items that contain the search string and highlights matches.</li>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DataGridFilteringMode">StartsWith</a> - The TagBox filters list items that begin with the search string and highlights matches.</li>
        <li><a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DataGridFilteringMode">None</a> - The TagBox does not filter list items.</li>
    </ul>
    <p>
        In this demo, the filter mode is set to <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DataGridFilteringMode">DataGridFilteringMode.StartsWith</a>.
        To filter list items, focus the edit box and type a search string. To change the filter mode or disable filtering, use the <b>Filtering Mode</b> drop-down list.
    </p>
</div>

@if (Data != null) {
    <div class="card demo-card">
        <div class="card-body mw-480" style="height: 280px">
            <DxTagBox Id="TagBox1"
                      Data="@Data"
                      FilteringMode="@FilteringMode"
                      @bind-SelectedItems="@SelectedItems"
                      @bind-DropDownVisible="@DropDownVisible"></DxTagBox>
        </div>
    </div>

    <div class="code-snippet card demo-card-wide">
        <CodeSnippetHeader></CodeSnippetHeader>
        <div class="card-footer text-muted">
            <div style="margin: 1em 0 -1em .5em;">
                <label class="d-inline-flex flex-nowrap align-items-center">
                    <b class="hljs-attr" style="white-space: nowrap; margin-right: .5em;">Filtering Mode: </b>
                    <DxComboBox Data="@(Enum.GetNames(typeof(DataGridFilteringMode)))"
                                SelectedItem="@(FilteringMode.ToString())"
                                SelectedItemChanged="@((string selectedItem) => { FilteringMode = Enum.Parse<DataGridFilteringMode>(selectedItem); })">
                    </DxComboBox>
                </label>
            </div>
            <CodeSnippet_Editor_TagBox_Filtering></CodeSnippet_Editor_TagBox_Filtering>
        </div>
    </div>
}

@code {
    IEnumerable<string> Data;

    protected override async Task OnInitializedAsync() {
        Data = await CountryNamesService.Load();
        SelectedItems = new List<string> { "United Kingdom", "United States" };
    }

    IEnumerable<string> SelectedItems { get; set; }

    bool DropDownVisible { get; set; } = true;

    DataGridFilteringMode filteringMode = DataGridFilteringMode.StartsWith;
    DataGridFilteringMode FilteringMode { get => filteringMode; set { filteringMode = value; InvokeAsync(StateHasChanged); } }
}

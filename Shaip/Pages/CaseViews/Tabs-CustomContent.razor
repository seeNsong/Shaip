<div class="demo-description" id="PageControl">
    <h2><DemoNavLink Link="Tabs#PageControl" />Create a Page Control: Update Linked Content Area</h2>
    <p>
        This sample shows how you can emulate a <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxTabs">tab control</a> in your Blazor application.
        The code below uses the tab control’s <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxTabsBase.ActiveTabIndex">ActiveTabIndex</a> property to track active tab change events.
        When a user selects a tab, the code updates the linked content area.
    </p>
</div>

<div class="card demo-card border-0 ">
    <div class="card-body p-0">
        <DxTabs @bind-ActiveTabIndex="@ActiveTabIndex">
            <DxTab Text="Home"></DxTab>
            <DxTab Text="Products"></DxTab>
            <DxTab Text="Support"></DxTab>
        </DxTabs>
        <div class="card dxbs-border-top-0 dxbs-border-radius-top-0">
            <div class="card-body">
                @switch (ActiveTabIndex)
                {
                    case 0:
                        <b>"Home" tab is active.</b>
                        break;
                    case 1:
                        <i>"Products" tab is active.</i>
                        break;
                    case 2:
                        <b><i>"Support" tab is active.</i></b>
                        break;

                }
            </div>
        </div>
    </div>
</div>
<div class="code-snippet card demo-card">
    <CodeSnippetHeader></CodeSnippetHeader>
    <div class="card-footer text-muted">
        <CodeSnippet_Tabs_ContendChanges></CodeSnippet_Tabs_ContendChanges>
    </div>
</div>

@code {
    int activeTabIndex = 1;
    int ActiveTabIndex { get => activeTabIndex; set { activeTabIndex = value; InvokeAsync(StateHasChanged); } }
}

@page "/PivotGridLargeDataBase"
@using Demo.Blazor.Model

@inject ContosoRetailContext ContosoRetailContext
@inject IOptions<DemoConfiguration> DemoConfiguration

<div class="demo-description">
    <h2>Pivot Grid - Large Data Source</h2>
    <p>
        This demo shows the performance of the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxPivotGrid-1">Pivot Grid</a> when it is bound to a dataset that contains a million rows. Experiment with navigating between the pages and sorting the data to experience the responsiveness of the pivot grid in this situation. The pager is enabled by setting the Pivot Grid's <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxPivotGridBase.ShowPager">ShowPager</a> and <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxPivotGridBase.PageSize">PageSize</a> properties.
    </p>
    <p>
        In this example, Entity Framework Core (version 3.0) provides the Pivot Grid with an IQueryable&lt;T&gt; source.
    </p>
</div>
@if (!DemoConfiguration.Value.SiteMode)
{
    <div class="online-only-warrning card">
        <img src="images/Information.svg" alt="Information" />
        <p class="info-caption">To try this demo, please navigate to the <a href="https://demos.devexpress.com/blazor/PivotGridLargeDataBase">online demo page</a>.</p>
        <p class="info-description">This demo is only accessible online because it uses a large data source that is hosted on a DevExpress internal database server.</p>
    </div>

    <div class="code-snippet card demo-card-wide">
        <CodeSnippetHeader></CodeSnippetHeader>
        <div class="card-footer text-muted">
            <CodeSnippet_Pivot_LargeDataSource></CodeSnippet_Pivot_LargeDataSource>
        </div>
    </div>
}
else
{
    if (largeDataSource == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <DxPivotGrid Data="@largeDataSource" ShowPager="true" PageSize="10">
            <DxPivotGridField Field="@nameof(Sale.StoreName)" Caption="Store" Area="@PivotGridFieldArea.Row"></DxPivotGridField>
            <DxPivotGridField Field="@nameof(Sale.DateKey)" GroupInterval="@PivotGridGroupInterval.Year" Caption="Year" Area="@PivotGridFieldArea.Column"></DxPivotGridField>
            <DxPivotGridField Field="@nameof(Sale.SalesAmount)" Caption="Amount" Area="@PivotGridFieldArea.Data" SummaryType="@PivotGridSummaryType.Sum">
                <DataTemplate>@string.Format("{0:c0}", context)</DataTemplate>
            </DxPivotGridField>
            <DxPivotGridField Field="@nameof(Sale.Id)" Caption="Count" Area="@PivotGridFieldArea.Data" SummaryType="@PivotGridSummaryType.Count">
                <DataTemplate>@string.Format("{0:n0}", context)</DataTemplate>
            </DxPivotGridField>
        </DxPivotGrid>
    }
    <div class="code-snippet card demo-card-wide">
        <CodeSnippetHeader></CodeSnippetHeader>
        <div class="card-footer text-muted">
            <CodeSnippet_Pivot_LargeDataSource></CodeSnippet_Pivot_LargeDataSource>
        </div>
    </div>

}

@code {

    IQueryable<Sale> largeDataSource;

    protected override void OnInitialized()
    {
        largeDataSource = ContosoRetailContext.Sales;
    }
}
